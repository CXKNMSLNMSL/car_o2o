<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.car.business.mapper.StatementMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.car.business.domain.Statement" >
    <id column="id" property="id" />
    <result column="customer_name" property="customerName" />
    <result column="customer_phone" property="customerPhone" />
    <result column="actual_arrival_time" property="actualArrivalTime" />
    <result column="license_plate" property="licensePlate" />
    <result column="car_series" property="carSeries" />
    <result column="service_type" property="serviceType" />
    <result column="appointment_id" property="appointmentId" />
    <result column="status" property="status" />
    <result column="pay_time" property="payTime" />
    <result column="payee_id" property="payeeId" />
    <result column="total_amount" property="totalAmount" />
    <result column="total_quantity" property="totalQuantity" />
    <result column="discount_amount" property="discountAmount" />
    <result column="create_time" property="createTime" />
    <result column="info" property="info" />
  </resultMap>
  <delete id="deleteByPrimaryKey" >
    delete from bus_statement
    where id = #{id}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
    insert into bus_statement (customer_name, customer_phone, actual_arrival_time, license_plate, 
      car_series, service_type, appointment_id, status, pay_time, payee_id, 
      total_amount, total_quantity, discount_amount, create_time, info)
    values (#{customerName}, #{customerPhone}, #{actualArrivalTime}, #{licensePlate}, 
      #{carSeries}, #{serviceType}, #{appointmentId}, #{status}, #{payTime}, #{payeeId}, 
      #{totalAmount}, #{totalQuantity}, #{discountAmount}, #{createTime}, #{info})
  </insert>
  <update id="updateByPrimaryKey" >
    update bus_statement
    set customer_name = #{customerName},
      customer_phone = #{customerPhone},
      actual_arrival_time = #{actualArrivalTime},
      license_plate = #{licensePlate},
      car_series = #{carSeries},
      service_type = #{serviceType},
      info = #{info}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
    select id, customer_name, customer_phone, actual_arrival_time, license_plate, car_series, 
    service_type, appointment_id, status, pay_time, payee_id, total_amount, total_quantity, 
    discount_amount, create_time, info
    from bus_statement
    where id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, customer_name, customer_phone, actual_arrival_time, license_plate, car_series, 
    service_type, appointment_id, status, pay_time, payee_id, total_amount, total_quantity, 
    discount_amount, create_time, info
    from bus_statement
  </select>

  <select id="selectForList" resultMap="BaseResultMap" >
    select id, customer_name, customer_phone, actual_arrival_time, license_plate, car_series,
           service_type, appointment_id, status, pay_time, payee_id, total_amount, total_quantity,
           discount_amount, create_time, info
    from bus_statement

    <where>
      <if test="customerName != null and customerName !=''">
        and customer_name like concat('%',#{customerName},'%')
      </if>
      <if test="customerPhone != null and customerPhone !=''">
        and customer_phone like concat('%',#{customerPhone},'%')
      </if>
      <if test="licensePlate != null and licensePlate !=''">
        and license_plate like concat('%',#{licensePlate},'%')
      </if>
    </where>




  </select>

  <select id="selectByAppointmentId" resultMap="BaseResultMap">
    select id, customer_name, customer_phone, actual_arrival_time, license_plate, car_series,
           service_type, appointment_id, status, pay_time, payee_id, total_amount, total_quantity,
           discount_amount, create_time, info
    from bus_statement where appointment_id = #{appointmentId}
  </select>

  <update id="updateAmount">
    update  bus_statement set total_amount = #{totalAmount}, total_quantity = #{totalQuantity}
       , discount_amount = #{price} where id = #{statementId}
  </update>

  <update id="updatePay">
    update bus_statement set pay_time = #{payTime}, payee_id = #{payeeId}, status = #{status}
        where id = #{id}
  </update>

</mapper>