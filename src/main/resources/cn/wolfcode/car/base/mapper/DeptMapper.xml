<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.car.base.mapper.DeptMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.car.base.domain.Dept" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="ancestors" property="ancestors" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="seq" property="seq" jdbcType="INTEGER" />
    <result column="leader" property="leader" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_dept
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.wolfcode.car.base.domain.Dept" useGeneratedKeys="true" keyProperty="id" >
    insert into sys_dept (parent_id, ancestors, name, 
      seq, leader, phone, 
      email, status, del_flag)
    values (#{parentId,jdbcType=BIGINT}, #{ancestors,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{seq,jdbcType=INTEGER}, #{leader,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{delFlag,jdbcType=CHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.car.base.domain.Dept" >
    update sys_dept
    set parent_id = #{parentId,jdbcType=BIGINT},
      ancestors = #{ancestors,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      seq = #{seq,jdbcType=INTEGER},
      leader = #{leader,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, parent_id, ancestors, name, seq, leader, phone, email, status, del_flag
    from sys_dept
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, parent_id, ancestors, name, seq, leader, phone, email, status, del_flag
    from sys_dept
  </select>
  <select id="selectForList" resultMap="BaseResultMap" >
    select id, parent_id, ancestors, name, seq, leader, phone, email, status, del_flag
    from sys_dept
  </select>

  <select id="selectWithQo" resultMap="BaseResultMap" >
    select id, parent_id, ancestors, name, seq, leader, phone, email, status, del_flag
    from sys_dept
    where del_flag = '0'
      <if test="parentId != null and parentId != 0">
        AND parent_id = #{parentId}
      </if>
      <if test="name != null and name != ''">
        AND name like concat('%', #{name}, '%')
      </if>
      <if test="status != null ">
        AND status = #{status}
      </if>
      order by parent_id, seq
  </select>
  <select id="selectByName" resultMap="BaseResultMap" >
    select id, parent_id, ancestors, name, seq, leader, phone, email, status, del_flag
    from sys_dept where name = #{name}
  </select>
  <select id="selectChildren" resultMap="BaseResultMap" >
    select id, parent_id, ancestors, name, seq, leader, phone, email, status, del_flag
    from sys_dept where parent_id = #{parentId}
  </select>

  <select id="selectIdByRoleId" resultType="long">
    select dept_id from sys_role_dept where role_id = #{roleId}
  </select>

</mapper>